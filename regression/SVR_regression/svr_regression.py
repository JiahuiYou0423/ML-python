# -*- coding: utf-8 -*-
"""SVR regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1or07sewO-tQX0MrUn2WF9QBZQF-iMYYJ

# Importing the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# Importing the data """

dataset = pd.read_csv('Position_Salaries.csv')
x = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

y = y.reshape(len(y),1)
print(x)

"""# Feature scaling

"""

from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
sc_y = StandardScaler()
x = sc_x.fit_transform(x)
y = sc_y.fit_transform(y)

print(x)

"""# Training the SVR model on the whole dataset"""

from sklearn.svm import SVR
regressor = SVR(kernel='rbf')
regressor.fit(x,y)

"""# Predicting a new result"""

sc_y.inverse_transform([regressor.predict(sc_x.transform([[6.5]]))])

"""# Visualising the SVR results"""

plt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y), color='red')
plt.plot(sc_x.inverse_transform(x), sc_y.inverse_transform(regressor.predict(x).reshape(len(x),1)), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""# Visualising the SVR results (higher resolution and smoother curve)"""

x_grid = np.arange(min(sc_x.inverse_transform(x)), max(sc_x.inverse_transform(x)), 0.1)
x_grid = x_grid.reshape((len(x_grid), 1))
plt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y), color='red')
plt.plot(x_grid, sc_y.inverse_transform(regressor.predict(sc_x.transform(x_grid)).reshape(len(x_grid),1)), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()